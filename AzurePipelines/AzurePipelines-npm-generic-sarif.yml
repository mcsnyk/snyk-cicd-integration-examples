# Runs 4 Snyk Products (Code, Open Source, Container, IaC)
# Outputs the results to the pipeline

# Prerequisites:
# - Set a SNYK_TOKEN in the pipelines secrets
# - Install the SARIF viewer extension
#   https://marketplace.visualstudio.com/items?itemName=sariftools.scans&targetId=bf3858e2-f2d0-4e06-962a-2107402a1234

# NOTE: Change this to a different pool to run the scripts.
pool: sebsnyk.pool 

steps:
  - checkout: self

  # .. your instructions on building the app or preparing the repository

  # install & prepare snyk
  - script: |
      npm install --location=global snyk

      # This OPTIONAL step will configure the Snyk CLI to connect to the EU or AU instance of Snyk.
      # Docs: https://docs.snyk.io/more-info/data-residency-at-snyk#cli-and-ci-pipelines-urls
      
      # snyk config set endpoint='https://app.eu.snyk.io/api'
      # snyk config set endpoint='https://app.au.snyk.io/api'

      snyk auth $(SNYK_TOKEN)
    displayName: 'snyk install & auth'

  # snyk code
  - script: snyk code test --sarif-file-output=CodeAnalysisLogs/snyk-code.sarif
    continueOnError: true
    displayName: 'snyk code'

  # snyk open source
  - script: snyk test --all-projects --sarif-file-output=CodeAnalysisLogs/snyk-open-source.sarif
    continueOnError: true
    displayName: 'snyk open source'

  # snyk container
  # NOTE: Change this to your container name
  - script: snyk container test sebsnyk/juice-shop --file=Dockerfile --sarif-file-output=CodeAnalysisLogs/snyk-container.sarif
    continueOnError: true
    displayName: 'snyk container'

  # snyk iac
  - script: snyk iac test --sarif-file-output=CodeAnalysisLogs/snyk-iac.sarif
    continueOnError: true
    displayName: 'snyk iac'

  # publish the results
  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: CodeAnalysisLogs"
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(Build.SourcesDirectory)/CodeAnalysisLogs
      ArtifactName: CodeAnalysisLogs
